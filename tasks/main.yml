---
- name: Create consul group
  ansible.builtin.group:
    name: "{{ consul_group }}"
    gid: "{{ consul_gid }}"
    state: present

- name: Create consul user
  ansible.builtin.user:
    name: "{{ consul_user }}"
    group: "{{ consul_group }}"
    uid: "{{ consul_uid }}"
    state: present

- name: Create Configuration Directories
  ansible.builtin.file:
    path: /etc/consul.d
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0750
    state: directory

- name: Create ssl Directories
  ansible.builtin.file:
    path: /etc/consul.d/ssl
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0750
    state: directory

- name: Copy Cert Authority File
  ansible.builtin.copy:
    content: "{{ ca_cert }}"
    dest: /etc/consul.d/ssl/ca.cert
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
    backup: yes

- name: Copy Cert File
  ansible.builtin.copy:
    content: "{{ consul_cert }}"
    dest: /etc/consul.d/ssl/consul.cert
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
    backup: yes

- name: Copy Cert Key
  ansible.builtin.copy:
    content: "{{ consul_key }}"
    dest: /etc/consul.d/ssl/consul.key
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
    backup: yes

- name: Create Consul Data Directory
  ansible.builtin.file:
    path: /var/consul
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0750
    state: directory

- name: Create Consul Directory
  ansible.builtin.file:
    path: /opt/consul/bin
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0750
    state: directory

- name: Create Consul Log Directory
  ansible.builtin.file:
    path: /var/log/consul
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0750
    state: directory

- name: Copy Server Config
  ansible.builtin.template:
    src: server_config.j2
    dest: /etc/consul.d/config.json
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
    backup: yes
  when: consul_role == 'server'

- name: Check Version Installed
  ansible.builtin.shell: |
         set -o pipefail
         if [ -f /opt/consul/bin/consul ]; then
             /opt/consul/bin/consul --version|awk 'NR==1{print $2}' |cut -dv -f2
         fi
  args:
    executable: /bin/bash
  register: consul_version_check
  changed_when: consul_version_check.stdout != consul_version

- name: Download Consul Software
  ansible.builtin.unarchive:
    src: "{{ consul_zip_url }}"
    dest: /opt/consul/bin
    remote_src: yes
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0750
  when: consul_version_check.stdout != consul_version

- name: Copy Server Config
  ansible.builtin.template:
    src: server_config.j2
    dest: /etc/consul.d/config.json
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
    backup: yes
  when: consul_role == 'server'

- name: Copy client Config
  ansible.builtin.template:
    src: client_config.j2
    dest: /etc/consul.d/config.json
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
    backup: yes
  when: consul_role == 'client'

- name: Copy Startup Script (systemd)
  ansible.builtin.template:
    src: consul.service.j2
    dest: /etc/systemd/system/consul.service
    owner: "root"
    group: "root"
    mode: 0750
    backup: no
  notify:
    - enable consul
    - start consul
  when: ansible_service_mgr == 'systemd'

- name: Copy Startup Script (sysvinit)
  ansible.builtin.template:
    src: consul_sysvinit.j2
    dest: /etc/init.d/consul
    owner: "root"
    group: "root"
    mode: 0750
    backup: no
  notify:
    - enable consul
    - start consul
  when: ansible_service_mgr == 'upstart'
